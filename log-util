import logging
import os
import pytest

# 日志输出目录
LOG_DIR = "logs"
os.makedirs(LOG_DIR, exist_ok=True)

# 保存 case 顺序编号映射
CASE_LOG_MAP = {}

# 第一步：收集顺序并编号
def pytest_collection_modifyitems(session, config, items):
    for idx, item in enumerate(items, start=1):
        CASE_LOG_MAP[item.nodeid] = f"case{idx}.log"
    # 按源码中定义顺序排序
    items.sort(key=lambda item: item.function.__code__.co_firstlineno)

# 第二步：测试前设置 logger
def pytest_runtest_setup(item):
    log_file_name = CASE_LOG_MAP.get(item.nodeid)
    log_path = os.path.join(LOG_DIR, log_file_name)

    root_logger = logging.getLogger()
    root_logger.setLevel(logging.DEBUG)

    # 清空旧的 handler（防止多次添加）
    for handler in root_logger.handlers[:]:
        root_logger.removeHandler(handler)

    # 设置新的 handler
    fh = logging.FileHandler(log_path, mode='w', encoding='utf-8')
    formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')
    fh.setFormatter(formatter)
    root_logger.addHandler(fh)
